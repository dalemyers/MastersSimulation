package org.mixim.examples.Buses;

import inet.base.NotificationBoard;
import inet.networklayer.autorouting.ipv4.HostAutoConfigurator;
import inet.networklayer.common.InterfaceTable;
import inet.networklayer.ipv4.RoutingTable;
import inet.transport.udp.UDP;
import inet.transport.tcp.TCP;
import inet.nodes.inet.NetworkLayer;
import inet.linklayer.ieee80211.Ieee80211Nic;

import ned.DatarateChannel; 

module Bus extends inet.nodes.inet.WirelessHost
{
    parameters:
        @display("i=device/wifilaptop");
        @node();
        double startX @unit("") = default(0); // the starting coordinates in meter
        double startY @unit("") = default(0); // the starting coordinates in meter
        int id = default(0); // the id of this bus

    gates:
        input radioIn @directIn;

    submodules:
        notificationBoard: NotificationBoard {
            parameters:
                @display("p=181,111");
        }
        interfaceTable: InterfaceTable {
            parameters:
                @display("p=61,35");
        }
        //app: BusChat {}
        //app: TCPBusChat {}
        mobility: BusMobility {
            parameters:
                @display("p=180,35");
        }
        routingTable: RoutingTable {
            parameters:
                IPForward = true;
                routerId = "";
                routingFile = "";
                @display("p=61,111");
        }
        tcp: TCP {
            parameters:
                @display("p=304,129");
        }
        udp: UDP {
            parameters:
                @display("p=304,129");
        }
        networkLayer: NetworkLayer {
            parameters:
                proxyARP = false;
                @display("p=304,229;q=queue");
            gates:
                ifIn[1];
                ifOut[1];
        }
        wlan: Ieee80211Nic {
            parameters:
                @display("p=181,229;q=queue");
        }
    connections allowunconnected:
        udp.appOut++ --> DatarateChannel --> app.udp$i;
        udp.appIn++ <-- app.udp$o;
        
        //tcp.appOut++ --> DatarateChannel --> app.tcpIn;
        //tcp.appIn++ <-- app.tcpOut;

        udp.ipOut --> networkLayer.udpIn;
        udp.ipIn <-- networkLayer.udpOut;

        wlan.upperLayerOut --> networkLayer.ifIn[0];
        wlan.upperLayerIn <-- networkLayer.ifOut[0];

        radioIn --> wlan.radioIn;
}


